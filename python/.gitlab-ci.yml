image: "python:3.8"

before_script:
  - pip install anybadge flake8 pylint

stages:
  - Static Analysis
  - Tests

flake8:
  stage: Static Analysis
  script:
    - flake8 --max-line-length=256 --ignore E127,E203,E722,W503,W605 .

pylint:
  stage: Static Analysis
  allow_failure: True
  script:
    - mkdir ./pylint
    - find . -type f -name "*.py" | xargs pylint -d E1101 -d C0103 -d R1725 -d E1102 -d R0913 -d R0914 -d C0301 -d C0114 -d W0702 -d R0903 -d E0611 -d E0401 -d R0914 -d R0801 -d W0703 -d R0902 --function-naming-style snake_case --method-naming-style snake_case --attr-naming-style snake_case --variable-naming-style snake_case --argument-naming-style any | tee ./pylint/pylint.log
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - EXIT_CODE=$(python3 -c "print(1 if $PYLINT_SCORE < 10 else 0)")
    - if [ $EXIT_CODE -eq 1 ]; then exit 1; fi
  artifacts:
    paths:
      - ./pylint/pylint.svg

pytest:
  stage: Tests
  script:
    - pip install -r requirements.txt
    - pip install anybadge coverage pytest
    - apt-get update
    - apt-get install -y libgl1-mesa-dev
    - export PYTHONPATH="$PYTHONPATH:."
    - coverage run -m pytest
    - coverageString=$(coverage report --include="src*")
    - echo "Total Coverage = $coverageString"
  coverage: '/^(?i)(TOTAL).*\s+(\d+\%)$/'
